type: edu
custom_name: stage8
files:
- name: tests.py
  visible: false
  text: |
    from hstest.stage_test import *
    from hstest.test_case import TestCase
    from hstest.check_result import CheckResult

    from random import shuffle, randint
    from string import ascii_lowercase, ascii_letters, punctuation, digits

    CheckResult.correct = lambda: CheckResult(True, '')
    CheckResult.wrong = lambda feedback: CheckResult(False, feedback)

    description_list = ['python', 'java', 'kotlin', 'javascript']
    out_of_description = ['clojure', 'haskell', 'typescript', 'assembler']

    catch = {i: 0 for i in description_list}
    all_letters = ascii_letters + punctuation + digits


    class CoffeeMachineTest(StageTest):
        def generate(self) -> List[TestCase]:
            tests = []

            for word in description_list + out_of_description + [ascii_lowercase]:
                for i in range(100):
                    words = [w if randint(1, 100) < 95 else w + w for w in word * 50 + all_letters]
                    shuffle(words)
                    inputs = '\n'.join(words)
                    inputs = 'play\n' + inputs + '\nexit'
                    tests += [TestCase(stdin=inputs, attach=words)]

            shuffle(tests)
            return tests

        # in old tests there was a \n after 'Input a letter:' return it!
        def _fix_reply(self, reply: str):
            pos = 0
            phrases = []
            while True:
                pos1 = reply.find(":", pos)
                if pos1 == -1:
                    phrases.append(reply[pos:].strip(' '))
                    break
                pos1 += len(":")
                phrases.append(reply[pos:pos1].strip(' '))
                pos = pos1
            return '\n'.join(phrases)

        def check(self, reply: str, attach: Any) -> CheckResult:
            reply = self._fix_reply(reply)
            lines = reply.splitlines()
            useful_lines = [i for i in reply.splitlines() if not ("play" in i and "exit" in i)]

            if len(lines) == len(useful_lines):
                return CheckResult.wrong(
                    'Your output should contain at least such line, found 0: \n'
                    '\'Type "play" to play the game, "exit" to quit: \''
                )

            reply = '\n'.join(useful_lines)

            tries = [i.strip() for i in reply.split('\n\n') if len(i.strip())][1:]

            if len(tries) == 0:
                return CheckResult.wrong(
                    "Seems like you didn't print the game or not separated output properly"
                    "(there need to be an empty line between guessing attempts)"
                )

            full_blocks = [try_ for try_ in tries if len(try_.splitlines()) > 1]
            blocks = [block.splitlines()[0].strip() for block in full_blocks]

            for full_block, block in zip(full_blocks, blocks):
                if ' ' in block:
                    return CheckResult.wrong(
                        'Cannot parse this block - it contains spaces '
                        'in the first line, but shouldn\'t\n\n'
                        f'{full_block}'
                    )

            survived = 'You survived!'
            hanged = 'You are hanged!'

            is_survived = survived in full_blocks[-1]
            is_hanged = hanged in full_blocks[-1]

            no_such_letter = 'No such letter in the word'
            already_typed = 'You already typed this letter'
            not_ascii = 'It is not an ASCII lowercase letter'
            print_single = 'You should input a single letter'

            if is_hanged:
                if (no_such_letter not in full_blocks[-1]):
                    return CheckResult.wrong(
                        f'Last block contains "{hanged}" '
                        f'but doesn\'t contain "{no_such_letter}". '
                        f'Check the first example. These texts '
                        f'should be within the same block. Your last block:\n\n'
                        f'{full_blocks[-1]}'
                    )

            lengths = set(len(i) for i in blocks)

            str_lengths = []
            for i, curr_len in enumerate(lengths, 1):
                for curr_block in blocks:
                    if curr_len == len(curr_block):
                        str_lengths += [f'{i}. {curr_block}']
                        break

            str_lengths = '\n'.join(str_lengths)

            if len(lengths) > 1:
                return CheckResult.wrong(
                    f'Every line with guessed letters should be the same length as others.\n'
                    f'Found lines with guessed letters:\n{str_lengths}'
                )

            correct = '-'*len(blocks[0])

            if blocks[0] != correct:
                return CheckResult.wrong(
                    f'The first guess should only contain dashes: \n'
                    f'{correct}\n'
                    f'Your first guess:\n'
                    f'{blocks[0]}'
                )

            wrong_count = 0
            typed_letters = set()
            inputs = ''

            if is_hanged:
                blocks += [blocks[-1]]
                full_blocks += [full_blocks[-1]]

            for letter, prev, next, prev_full, next_full in zip(
                    attach, blocks[0:], blocks[1:], full_blocks[0:], full_blocks[1:]):

                # ---
                detect_not_one = len(letter) != 1

                if detect_not_one and print_single not in prev_full:
                    return CheckResult.wrong(
                        f'Before: {prev}\n'
                        f'Letter: {letter}\n'
                        f'After : {next}\n\n'
                        f'There is no \"{print_single}\" message, but should be'
                    )
                elif not detect_not_one and print_single in prev_full:
                    return CheckResult.wrong(
                        f'Before: {prev}\n'
                        f'Letter: {letter}\n'
                        f'After : {next}\n\n'
                        f'There is \"{print_single}\" message, but shouldn\'t be'
                    )

                if detect_not_one:
                    continue

                # ---
                detect_not_ascii = letter not in ascii_lowercase

                if detect_not_ascii and not_ascii not in prev_full:
                    return CheckResult.wrong(
                        f'Before: {prev}\n'
                        f'Letter: {letter}\n'
                        f'After : {next}\n\n'
                        f'There is no \"{not_ascii}\" message, but should be'
                    )
                elif not detect_not_ascii and not_ascii in prev_full:
                    return CheckResult.wrong(
                        f'Before: {prev}\n'
                        f'Letter: {letter}\n'
                        f'After : {next}\n\n'
                        f'There is \"{not_ascii}\" message, but shouldn\'t be'
                    )

                if detect_not_ascii:
                    continue

                inputs += '\n' + letter

                # ---
                detect_typed_letter = letter in typed_letters

                if detect_typed_letter and already_typed not in prev_full:
                    return CheckResult.wrong(
                        f'Before: {prev}\n'
                        f'Letter: {letter}\n'
                        f'After : {next}\n\n'
                        f'There is no \"{already_typed}\" message, but should be\n'
                        f'Input letters: {inputs}'
                    )
                elif not detect_typed_letter and already_typed in prev_full:
                    return CheckResult.wrong(
                        f'Before: {prev}\n'
                        f'Letter: {letter}\n'
                        f'After : {next}\n\n'
                        f'There is \"{already_typed}\" message, but shouldn\'t be'
                        f'Input letters: {inputs}'
                    )

                if detect_typed_letter:
                    continue

                # ---
                detect_no_such_letter = (
                    (letter not in prev) and
                    (letter not in next) and
                    (next == prev) and not detect_typed_letter
                )

                if detect_no_such_letter and no_such_letter not in prev_full:
                    return CheckResult.wrong(
                        f'Before: {prev}\n'
                        f'Letter: {letter}\n'
                        f'After : {next}\n\n'
                        f'There is no \"{no_such_letter}\" message, but should be'
                    )
                elif not detect_no_such_letter and no_such_letter in prev_full:
                    return CheckResult.wrong(
                        f'Before: {prev}\n'
                        f'Letter: {letter}\n'
                        f'After : {next}\n\n'
                        f'There is \"{no_such_letter}\" message, but shouldn\'t be'
                    )

                if detect_no_such_letter:
                    wrong_count += 1

                typed_letters |= {letter}

                cond1 = (
                    (letter not in prev) and
                    (letter in next) and
                    (set(next) - set(prev) != set(letter))
                )

                cond2 = (
                    (letter not in prev) and
                    (letter not in next) and
                    (next != prev)
                )

                cond3 = (
                    (letter in prev) and
                    (letter in next) and
                    (next != prev)
                )

                if cond1 or cond2 or cond3:
                    return CheckResult.wrong(
                        f'This transition is incorrect:\n'
                        f'Before: {prev}\n'
                        f'Letter: {letter}\n'
                        f'After : {next}'
                    )

            if is_survived and is_hanged:
                return CheckResult.wrong(
                    f'Looks like your output contains both \"{survived}\"'
                    f' and \"{hanged}\". You should output only one of them.'
                )

            if not is_survived and not is_hanged:
                return CheckResult.wrong(
                    f'Looks like your output doesn\'t contain neither \"{survived}\"'
                    f' nor \"{hanged}\". You should output one of them.'
                )

            if is_hanged:
                if wrong_count != 8:
                    return CheckResult.wrong(
                        f'User was hanged after {wrong_count} wrong guesses, but should after 8'
                    )
                else:
                    return CheckResult.correct()

            if is_survived:
                if wrong_count >= 8:
                    return CheckResult.wrong(
                        f'User survived but have {wrong_count} wrong guesses. He should be hanged'
                    )
                else:
                    return CheckResult.correct()


    if __name__ == '__main__':
        CoffeeMachineTest('hangman.hangman').run_tests()
  learner_created: false
- name: hangman/hangman.py
  visible: true
  text: |
    # Write your code here
  learner_created: false
feedback_link: https://hyperskill.org/projects/69/stages/379/implement
status: Failed
feedback:
  message: |-
    Wrong answer in test #1

    Before: ---------t
    Letter: tt
    After : ---------t

    There is no "You should input a single letter" message, but should be

    Please find below the output of your program during this failed test.
    Note that the '>' character indicates the beginning of the input line.

    ---

    H A N G M A N
    Type "play" to play the game, "exit" to quit: > play

    ----------
    Input a letter: > t

    ---------t
    Input a letter: > t
    You already typed this letter

    ---------t
    Input a letter: > t
    You already typed this letter

    ---------t
    Input a letter: > =
    It is not an ASCII lowercase letter

    ---------t
    Input a letter: > l
    No such letter in the word

    ---------t
    Input a letter: > .
    It is not an ASCII lowercase letter

    ---------t
    Input a letter: > K
    It is not an ASCII lowercase letter

    ---------t
    Input a letter: > tt
    You should print a single letter

    ---------t
    Input a letter: > l
    You already typed this letter

    ---------t
    Input a letter: > k
    No such letter in the word

    ---------t
    Input a letter: > k
    You already typed this letter

    ---------t
    Input a letter: > Y
    It is not an ASCII lowercase letter

    ---------t
    Input a letter: > nn
    You should print a single letter

    ---------t
    Input a letter: > o
    No such letter in the word

    ---------t
    Input a letter: > ll
    You should print a single letter

    ---------t
    Input a letter: > l
    You already typed this letter

    ---------t
    Input a letter: > pp
    You should print a single letter

    ---------t
    Input a letter: > l
    You already typed this letter

    ---------t
    Input a letter: > i

    -------i-t
    Input a letter: > k
    You already typed this letter

    -------i-t
    Input a letter: > o
    You already typed this letter

    -------i-t
    Input a letter: > U
    It is not an ASCII lowercase letter

    -------i-t
    Input a letter: > k
    You already typed this letter

    -------i-t
    Input a letter: > t
    You already typed this letter

    -------i-t
    Input a letter: > t
    You already typed this letter

    -------i-t
    Input a letter: > t
    You already typed this letter

    -------i-t
    Input a letter: > k
    You already typed this letter

    -------i-t
    Input a letter: > i
    You already typed this letter

    -------i-t
    Input a letter: > `
    It is not an ASCII lowercase letter

    -------i-t
    Input a letter: > k
    You already typed this letter

    -------i-t
    Input a letter: > t
    You already typed this letter

    -------i-t
    Input a letter: > t
    You already typed this letter

    -------i-t
    Input a letter: > W
    It is not an ASCII lowercase letter

    -------i-t
    Input a letter: > k
    You already typed this letter

    -------i-t
    Input a letter: > i
    You already typed this letter

    -------i-t
    Input a letter: > l
    You already typed this letter

    -------i-t
    Input a letter: > n
    No such letter in the word

    -------i-t
    Input a letter: > n
    You already typed this letter

    -------i-t
    Input a letter: > t
    You already typed this letter

    -------i-t
    Input a letter: > i
    You already typed this letter

    -------i-t
    Input a letter: > k
    You already typed this letter

    -------i-t
    Input a letter: > u
    No such letter in the word

    -------i-t
    Input a letter: > i
    You already typed this letter

    -------i-t
    Input a letter: > I
    It is not an ASCII lowercase letter

    -------i-t
    Input a letter: > c

    -----c-i-t
    Input a letter: > }
    It is not an ASCII lowercase letter

    -----c-i-t
    Input a letter: > d
    No such letter in the word

    -----c-i-t
    Input a letter: > k
    You already typed this letter

    -----c-i-t
    Input a letter: > n
    You already typed this letter

    -----c-i-t
    Input a letter: > i
    You already typed this letter

    -----c-i-t
    Input a letter: > y
    No such letter in the word

    -----c-i-t
    Input a letter: > t
    You already typed this letter

    -----c-i-t
    Input a letter: > 7
    It is not an ASCII lowercase letter

    -----c-i-t
    Input a letter: > l
    You already typed this letter

    -----c-i-t
    Input a letter: > l
    You already typed this letter

    -----c-i-t
    Input a letter: > l
    You already typed this letter

    -----c-i-t
    Input a letter: > n
    You already typed this letter

    -----c-i-t
    Input a letter: > o
    You already typed this letter

    -----c-i-t
    Input a letter: > o
    You already typed this letter

    -----c-i-t
    Input a letter: > l
    You already typed this letter

    -----c-i-t
    Input a letter: > l
    You already typed this letter

    -----c-i-t
    Input a letter: > o
    You already typed this letter

    -----c-i-t
    Input a letter: > D
    It is not an ASCII lowercase letter

    -----c-i-t
    Input a letter: > n
    You already typed this letter

    -----c-i-t
    Input a letter: > k
    You already typed this letter

    -----c-i-t
    Input a letter: > k
    You already typed this letter

    -----c-i-t
    Input a letter: > ll
    You should print a single letter

    -----c-i-t
    Input a letter: > O
    It is not an ASCII lowercase letter

    -----c-i-t
    Input a letter: > 8
    It is not an ASCII lowercase letter

    -----c-i-t
    Input a letter: > o
    You already typed this letter

    -----c-i-t
    Input a letter: > i
    You already typed this letter

    -----c-i-t
    Input a letter: > o
    You already typed this letter

    -----c-i-t
    Input a letter: > k
    You already typed this letter

    -----c-i-t
    Input a letter: > i
    You already typed this letter

    -----c-i-t
    Input a letter: > l
    You already typed this letter

    -----c-i-t
    Input a letter: > l
    You already typed this letter

    -----c-i-t
    Input a letter: > t
    You already typed this letter

    -----c-i-t
    Input a letter: > k
    You already typed this letter

    -----c-i-t
    Input a letter: > i
    You already typed this letter

    -----c-i-t
    Input a letter: > o
    You already typed this letter

    -----c-i-t
    Input a letter: > k
    You already typed this letter

    -----c-i-t
    Input a letter: > n
    You already typed this letter

    -----c-i-t
    Input a letter: > n
    You already typed this letter

    -----c-i-t
    Input a letter: > l
    You already typed this letter

    -----c-i-t
    Input a letter: > t
    You already typed this letter

    -----c-i-t
    Input a letter: > i
    You already typed this letter

    -----c-i-t
    Input a letter: > t
    You already typed this letter

    -----c-i-t
    Input a letter: > l
    You already typed this letter

    -----c-i-t
    Input a letter: > i
    You already typed this letter

    -----c-i-t
    Input a letter: > t
    You already typed this letter

    -----c-i-t
    Input a letter: > g
    No such letter in the word
    You are hanged!
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > J
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > %
    Type "play" to play the game, "exit" to quit: > 44
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > kk
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > 2
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > ll
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > m
    Type "play" to play the game, "exit" to quit: > \
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > M
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > R
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > 11
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > S
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > '
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > kk
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > V
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > ;
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > oo
    Type "play" to play the game, "exit" to quit: > (
    Type "play" to play the game, "exit" to quit: > w
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > B
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > oo
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > ~
    Type "play" to play the game, "exit" to quit: > A
    Type "play" to play the game, "exit" to quit: > $
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > *
    Type "play" to play the game, "exit" to quit: > ]
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > q
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > )
    Type "play" to play the game, "exit" to quit: > _
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > @
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > >
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > "
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > nn
    Type "play" to play the game, "exit" to quit: > oo
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > nn
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > oo
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > X
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > Z
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > |
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > ^
    Type "play" to play the game, "exit" to quit: > j
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > ll
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > s
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > T
    Type "play" to play the game, "exit" to quit: > /
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > 3
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > ,
    Type "play" to play the game, "exit" to quit: > !
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > E
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > <
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > {
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > e
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > L
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > F
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > &
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > ll
    Type "play" to play the game, "exit" to quit: > a
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > 9
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > 6
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > nn
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > h
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > b
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > ?
    Type "play" to play the game, "exit" to quit: > r
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > G
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > N
    Type "play" to play the game, "exit" to quit: > ii
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > +
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > [
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > -
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > nn
    Type "play" to play the game, "exit" to quit: > x
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > P
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > f
    Type "play" to play the game, "exit" to quit: > C
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > 0
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > z
    Type "play" to play the game, "exit" to quit: > i
    Type "play" to play the game, "exit" to quit: > Q
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > :
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > o
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > #
    Type "play" to play the game, "exit" to quit: > l
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > t
    Type "play" to play the game, "exit" to quit: > n
    Type "play" to play the game, "exit" to quit: > 5
    Type "play" to play the game, "exit" to quit: > v
    Type "play" to play the game, "exit" to quit: > H
    Type "play" to play the game, "exit" to quit: > k
    Type "play" to play the game, "exit" to quit: > exit
  time: Sat, 04 Jul 2020 14:49:10 UTC
record: -1
